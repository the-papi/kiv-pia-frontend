# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

union GameResponseResult = Game | GameDoesntExist | PlayerAlreadyInGame

union RegisterResult = User | UsernameAlreadyUsed

type ChatMessage {
  from: User!
  message: String!
}

type Game {
  gameStates: [GameState!]!
  players: [Player!]!
}

type GameDoesntExist {
  message: String!
}

type GameRequest {
  from: User!
  requestId: String!
}

type GameResponse {
  requestId: String!
  status: GameResponseStatus!
}

type GameState {
  symbol: GameSymbol!
  x: Int!
  y: Int!
}

type JWT {
  accessToken: String
  refreshToken: String
}

type Mutation {
  acceptGameRequestAndStartGame(input: GameResponseInput!): GameResponseResult!
  login(input: LoginInput!): JWT
  placeSymbol(input: PlaceSymbolInput!): Boolean!
  register(input: RegisterInput!): RegisterResult!
  sendChatMessage(input: ChatMessageInput!): Boolean!
  sendGameRequest(input: GameRequestInput!): String
}

type Player {
  symbol: GameSymbol!
  user: User!
}

type PlayerAlreadyInGame {
  message: String!
}

type Profile {
  email: String!
  id: Float!
  username: String!
}

type Query {
  activeGame: Game
  activeUsers: [UserStatusUpdate!]
  me: Profile!
}

type Subscription {
  gameRequest: GameRequest!
  gameResponse: GameResponse!
  gameState: GameState!
  newChatMessage: ChatMessage!
  userStatus: UserStatusUpdate!
}

type User {
  id: Float!
  username: String!
}

type UserStatusUpdate {
  status: UserStatus!
  user: User!
}

type UsernameAlreadyUsed {
  message: String!
}

enum GameResponseStatus {
  Accepted
  Rejected
}

enum GameSymbol {
  Circle
  Cross
}

enum UserStatus {
  Offline
  Online
}

input ChatMessageInput {
  message: String!
}

input GameRequestInput {
  userId: Int!
}

input GameResponseInput {
  requestId: String!
}

input LoginInput {
  password: String!
  username: String!
}

input PlaceSymbolInput {
  x: Int!
  y: Int!
}

input RegisterInput {
  email: String!
  password: String!
  username: String!
}
